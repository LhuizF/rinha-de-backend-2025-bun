services:
  api1: &api
    build: ./app
    hostname: api1
    environment:
      - DATABASE_HOST=db
      - PORT=3333
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
    networks:
      - backend
      - payment-processor
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: "0.40"
          memory: "55MB"

  api2:
    <<: *api
    hostname: api2

  db:
    image: postgres:17-alpine
    hostname: db
    environment:
      - POSTGRES_DB=rinha_db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    networks:
      - backend
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    deploy:
      resources:
        limits:
          cpus: "0.30"
          memory: "130MB"

  load-balancer:
    image: nginx:1.25.2-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:9999"
    networks:
      - backend
    depends_on:
      - api1
      - api2
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "15MB"

  rabbitmq:
    image: rabbitmq:3.13-alpine
    hostname: rabbitmq
    networks:
      - backend
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 10s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: "0.20"
          memory: "95MB"

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true
